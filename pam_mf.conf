# В секции general содержатся общие настройки для всех сервисов. 
# Можно создать дополнительные секции для конкретных сервисов,
# название секции должно совпадать с названием сервиса, то есть
# для sshd должна быть создана секция [sshd], для sudo [sudo].
# Так же есть 2 специальные секции для sshd: sshd_interactive и sshd_password.
[general]

# Ip адреса или название хостов через запятую.
#radius_hosts=localhost

# Порт серверов, должен быть один для всех.
#radius_port=1812

# Время ожидания ответа от сервера в секундах.
#timeout=20

# Количество повторных попыток получить ответ от сервера.
#retransmit_count=4

#Указывайте значение в зависимости от типа развертывания:
# 1) Локальный RADIUS адаптер c настроенной идентификацией клиентов: укажите
#      значение, заданное в параметре radius-shared-secret в клиентском 
#      файле конфигурации.
# 2) Локальный RADIUS адаптер без идентификации клиентов: укажите значение,
#      заданное в параметре radius-shared-secret в корневом файле конфигурации.
# 3) Облачный radius.multifactor.ru: укажите Shared Secret из соответствующего 
#     ресурса  в панели администратора Multifactor. 
#shared_secret=0000000000

# Используется для идентификации клиента. Указанное значение передается 
# в запросе доступа на RADIUS сервер в RADIUS-атрибуте NAS-Identifier. 
# Указывайте значение в зависимости от типа развертывания:
# 1) Локальный RADIUS адаптер c настроенной идентификацией клиентов: укажите
#      значение, заданное в параметре radius-client-nas-identifier в клиентском 
#      файле конфигурации.
# 2) Локальный RADIUS адаптер без идентификации клиентов: оставьте пустым.
# 3) Облачный radius.multifactor.ru: укажите NAS Identifier из соответствующего 
#     ресурса  в панели администратора Multifactor. 
#nas_indentifier=

# Если password_required=true, тогда модуль будет запрашивать и отправлять пароль RADIUS серверу.
#password_required=false

# Пользователи через запятую для которых не требуется проверка второго фактора, 
# также можно в качестве пользователя указать local_users(все локальные пользователи). 
#skip_users=

# Локальные группы через запятую для которых не требуется проверка второго фактора.
#skip_groups=

# Следующие параметры определяют какое значение будет возвращать модуль в 
# различных ситуациях. Значения могут быть следующими: auth_err, success, 
# authinfo_unavail, cred_insufficient, user_unknown.

# Если значение не равно none, модуль сразу закончит работу с указанным 
# кодом возврата
#always_return=none

#Задает код возврата, если модулю не известно имя пользователя.
#unknown_user_result=user_unknown

#Задает код возврата, если для пользователя не требуется проверка второго фактора.
#skip_result=succes

#Задает код возврата, если ни один сервер не отвечает.
#bypass_result=auth_err

# Задает код возврата, если модулю требуется интерактивный ответ пользователя, но
# сервис вызвавший модуль не поддерживает интерактивность.
#interactive_unavailable_result=authinfo_unavail

#Задает код возврата в случае успешной проверки второго фактора.
#access_accepted_result=success

#Задает код возврата в случае провала проверки второго фактора.
#access_rejected_result=auth_err

